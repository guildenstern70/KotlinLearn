group 'net.littlelite.kotlinlearn'
version '1.1'

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = "net.littlelite.kotlinlearn.MainKt"

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group:'org.jetbrains.kotlin', name:'kotlin-gradle-plugin', version: kotlin_version
    }
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

jar {
    manifest {
        attributes ('Main-Class': 'net.littlelite.kotlinlearn.MainKt')
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

sourceCompatibility = 1.8

test {
    reports.junitXml.destination = file('shippable/testresults')
}

dependencies {
    ktlint group: 'com.github.shyiko', name: 'ktlint', version: '0.23.1'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    testCompile group: 'junit', name: 'junit', version: junit_version
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}



